<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
    xmlns:beans="http://www.springframework.org/schema/beans"
     xmlns:context="http://www.springframework.org/schema/context"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans  
	http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
	http://www.springframework.org/schema/security 
	http://www.springframework.org/schema/security/spring-security-3.2.xsd">
   
	<http auto-config="true" use-expressions="true">
		<intercept-url pattern="/admin**" access="hasRole('ROLE_ADMIN')" />

		<!-- access denied page -->
		<access-denied-handler error-page="/403" />
		<form-login login-page="/admin/login" default-target-url="/admin"
			authentication-failure-url="/admin/login?error" username-parameter="username"
			password-parameter="password" />
				
		<logout invalidate-session="true" 
        	logout-success-url="/admin/login?logout" delete-cookies="JSESSIONID" />	

        <session-management invalid-session-url="/admin/login">
            <concurrency-control max-sessions="1" expired-url="/admin/login" />
        </session-management>        	   	
		
		<!-- enable csrf protection -->
		<csrf />

	</http>


<beans:bean id="customUserDetailsService" class="com.deccanrock.verifyed.service.CustomUserDetailsService"> 
		<beans:property name="usersByUsernameQuery" value="select * from vrf_admin_users where username = ?"/>
		<beans:property name="authoritiesByUsernameQuery" value="select username, role from vrf_admin_roles where username =?" />
		<beans:property name="dataSource" ref="dataSource" />
</beans:bean>
 	
<beans:bean id="userDetailsDao" class="com.deccanrock.verifyed.service.dao.UserDetailsDao" > 
	<beans:property name="dataSource" ref="dataSource" />
</beans:bean>
	
<beans:bean id="authenticationProvider" class="com.deccanrock.verifyed.security.LimitLoginAuthenticationProvider">
	<beans:property name="userDetailsService" ref="customUserDetailsService" />
	<beans:property name="userDetailsDao" ref="userDetailsDao" />
</beans:bean>
 

<beans:bean class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder" id="passwordEncoder" />

<authentication-manager>
	<authentication-provider ref="authenticationProvider" />
</authentication-manager>

 
</beans:beans>